<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.favorsoft.mplatform.cdn.mapper.MasterMapper">
    <resultMap id="propValue" type="com.favorsoft.mplatform.cdn.dto.PropValue" />

    <select id="getClassProp" resultMap="propValue">
        with recursive cte as (
            select domain_id, class_id, parent_id, 1 as level from mclass where class_id = #{classId} and domain_id = #{domainId}
            union all
            select p.domain_id, p.class_id, p.parent_id, 1+level as level from mclass p inner join cte on p.class_id = cte.parent_id and p.domain_id = cte.domain_id
        )
        select cte.domain_id, cte.class_id, cte.parent_id, p.prop_id, p.area_id, p.type from cte
             LEFT JOIN class_prop cp on cte.class_id = cp.class_id and cte.domain_id = cp.domain_id
             LEFT JOIN (select prop_id, area_id, type, group_id from prop) p on cp.prop_id = p.prop_id
        ORDER BY cte.level desc
    </select>

    <select id="getMasterData" resultType="map">
        select m.domain_id, m.class_id, m.master_id, m.status,
        <foreach collection="props" item="prop" index="key" separator=", ">
            ${prop}.value as ${prop}
        </foreach>
        from master m
        <foreach collection="props" item="prop" index="key" separator=" ">
            LEFT OUTER JOIN pv_${prop} as ${prop} on m.master_id = ${prop}.master_id
        </foreach>
        WHERE m.domain_id = #{domainId} and m.class_id in (
        <foreach collection="classes" item="class" index="key" separator=", ">
            #{class.class_id}
        </foreach>
        )
        <if test="masterId != null">
            AND m.master_id = #{masterId}
        </if>
    </select>

    <select id="getChildClasses" resultType="map">
        WITH RECURSIVE CTE AS (
            SELECT class_id,
                   parent_id,
                   (select message from message_lang where message_id = mclass.message_id and lang = #{lang}) as menu_path
            FROM mclass
            WHERE class_id = #{classId} and domain_id = #{domainId}
            UNION ALL
            SELECT a.class_id,
                   a.parent_id,
                   concat(b.menu_path, ' > ', (select message from message_lang where message_id = a.message_id and lang = #{lang})) as menu_path
            FROM mclass a
                INNER JOIN CTE b ON a.parent_id = b.class_id
        )
        SELECT class_id, menu_path FROM CTE
    </select>
</mapper>