plugins {
	id("org.springframework.boot") version "3.2.0"
	id("io.spring.dependency-management") version "1.1.4"
	id 'java'
	id("com.palantir.docker") version "0.35.0"
	id("io.freefair.lombok") version "8.4"
	id 'idea'
}

group = 'com.favorsoft'
version = '1.1'
sourceCompatibility = '17'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	manifest {
		attributes 'Start-Class': 'com.favorsoft.mplatform.MplatformApplication'
	}
}

docker {
	name "staricex/mplatform:$project.version"
	dependsOn build
	files bootJar
	dockerfile file('src/main/docker/Dockerfile')
	buildArgs([BUILD_VERSION: project.version])
	noCache true
}

repositories {
	mavenCentral()
}

dependencies {
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	 implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.javers:javers-spring-boot-starter-mongo:7.3.6'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.2'
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.12.3'
	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation group: 'commons-io', name: 'commons-io', version: '2.15.1'


	// https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
	implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	// https://mvnrepository.com/artifact/net.minidev/json-smart
	implementation group: 'net.minidev', name: 'json-smart', version: '2.5.0'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.1'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.16.1'

}

test {
	useJUnitPlatform()
}
